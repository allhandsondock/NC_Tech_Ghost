param profiles_ghost_afd3_edvtrqr7el4jc_name string = 'ghost-afd3-edvtrqr7el4jc'

resource profiles_ghost_afd3_edvtrqr7el4jc_name_resource 'Microsoft.Cdn/profiles@2024-09-01' = {
  name: profiles_ghost_afd3_edvtrqr7el4jc_name
  location: 'Global'
  sku: {
    name: 'Standard_AzureFrontDoor'
  }
  kind: 'frontdoor'
  properties: {
    originResponseTimeoutSeconds: 30
  }
}

resource profiles_ghost_afd3_edvtrqr7el4jc_name_ghost 'Microsoft.Cdn/profiles/afdendpoints@2024-09-01' = {
  parent: profiles_ghost_afd3_edvtrqr7el4jc_name_resource
  name: 'ghost'
  location: 'Global'
  properties: {
    enabledState: 'Enabled'
  }
}

resource profiles_ghost_afd3_edvtrqr7el4jc_name_ghost_OriginGroup 'Microsoft.Cdn/profiles/origingroups@2024-09-01' = {
  parent: profiles_ghost_afd3_edvtrqr7el4jc_name_resource
  name: 'ghost-OriginGroup'
  properties: {
    loadBalancingSettings: {
      sampleSize: 4
      successfulSamplesRequired: 2
      additionalLatencyInMilliseconds: 0
    }
    healthProbeSettings: {
      probePath: '/'
      probeRequestType: 'HEAD'
      probeProtocol: 'Https'
      probeIntervalInSeconds: 120
    }
    sessionAffinityState: 'Disabled'
  }
}

resource profiles_ghost_afd3_edvtrqr7el4jc_name_cache 'Microsoft.Cdn/profiles/rulesets@2024-09-01' = {
  parent: profiles_ghost_afd3_edvtrqr7el4jc_name_resource
  name: 'cache'
}

resource profiles_ghost_afd3_edvtrqr7el4jc_name_ghost_OriginGroup_ghost_Origin 'Microsoft.Cdn/profiles/origingroups/origins@2024-09-01' = {
  parent: profiles_ghost_afd3_edvtrqr7el4jc_name_ghost_OriginGroup
  name: 'ghost-Origin'
  properties: {
    hostName: 'ghost-web-edvtrqr7el4jc.azurewebsites.net'
    httpPort: 80
    httpsPort: 443
    originHostHeader: 'ghost-web-edvtrqr7el4jc.azurewebsites.net'
    priority: 1
    weight: 1000
    enabledState: 'Enabled'
    enforceCertificateNameCheck: true
  }
  dependsOn: [
    profiles_ghost_afd3_edvtrqr7el4jc_name_resource
  ]
}

resource profiles_ghost_afd3_edvtrqr7el4jc_name_cache_cachePosts 'Microsoft.Cdn/profiles/rulesets/rules@2024-09-01' = {
  parent: profiles_ghost_afd3_edvtrqr7el4jc_name_cache
  name: 'cachePosts'
  properties: {
    order: 100
    conditions: [
      {
        name: 'UrlPath'
        parameters: {
          typeName: 'DeliveryRuleUrlPathMatchConditionParameters'
          operator: 'Wildcard'
          negateCondition: false
          matchValues: [
            '/*/'
          ]
          transforms: []
        }
      }
    ]
    actions: [
      {
        name: 'RouteConfigurationOverride'
        parameters: {
          typeName: 'DeliveryRuleRouteConfigurationOverrideActionParameters'
          cacheConfiguration: {
            isCompressionEnabled: 'Disabled'
            queryStringCachingBehavior: 'IgnoreQueryString'
            cacheBehavior: 'OverrideAlways'
            cacheDuration: '01:00:00'
          }
          originGroupOverride: {
            originGroup: {
              id: profiles_ghost_afd3_edvtrqr7el4jc_name_ghost_OriginGroup.id
            }
            forwardingProtocol: 'MatchRequest'
          }
        }
      }
    ]
    matchProcessingBehavior: 'Continue'
  }
  dependsOn: [
    profiles_ghost_afd3_edvtrqr7el4jc_name_resource
  ]
}

resource profiles_ghost_afd3_edvtrqr7el4jc_name_cache_excludeCache 'Microsoft.Cdn/profiles/rulesets/rules@2024-09-01' = {
  parent: profiles_ghost_afd3_edvtrqr7el4jc_name_cache
  name: 'excludeCache'
  properties: {
    order: 200
    conditions: [
      {
        name: 'UrlPath'
        parameters: {
          typeName: 'DeliveryRuleUrlPathMatchConditionParameters'
          operator: 'BeginsWith'
          negateCondition: false
          matchValues: [
            '/ghost'
          ]
          transforms: []
        }
      }
    ]
    actions: [
      {
        name: 'RouteConfigurationOverride'
        parameters: {
          typeName: 'DeliveryRuleRouteConfigurationOverrideActionParameters'
          originGroupOverride: {
            originGroup: {
              id: profiles_ghost_afd3_edvtrqr7el4jc_name_ghost_OriginGroup.id
            }
            forwardingProtocol: 'MatchRequest'
          }
        }
      }
    ]
    matchProcessingBehavior: 'Continue'
  }
  dependsOn: [
    profiles_ghost_afd3_edvtrqr7el4jc_name_resource
  ]
}

resource profiles_ghost_afd3_edvtrqr7el4jc_name_ghost_ghost_Route 'Microsoft.Cdn/profiles/afdendpoints/routes@2024-09-01' = {
  parent: profiles_ghost_afd3_edvtrqr7el4jc_name_ghost
  name: 'ghost-Route'
  properties: {
    cacheConfiguration: {
      compressionSettings: {
        isCompressionEnabled: false
        contentTypesToCompress: [
          'application/eot'
          'application/font'
          'application/font-sfnt'
          'application/javascript'
          'application/json'
          'application/opentype'
          'application/otf'
          'application/pkcs7-mime'
          'application/truetype'
          'application/ttf'
          'application/vnd.ms-fontobject'
          'application/xhtml+xml'
          'application/xml'
          'application/xml+rss'
          'application/x-font-opentype'
          'application/x-font-truetype'
          'application/x-font-ttf'
          'application/x-httpd-cgi'
          'application/x-javascript'
          'application/x-mpegurl'
          'application/x-opentype'
          'application/x-otf'
          'application/x-perl'
          'application/x-ttf'
          'font/eot'
          'font/ttf'
          'font/otf'
          'font/opentype'
          'image/svg+xml'
          'text/css'
          'text/csv'
          'text/html'
          'text/javascript'
          'text/js'
          'text/plain'
          'text/richtext'
          'text/tab-separated-values'
          'text/xml'
          'text/x-script'
          'text/x-component'
          'text/x-java-source'
        ]
      }
      queryStringCachingBehavior: 'UseQueryString'
    }
    customDomains: []
    originGroup: {
      id: profiles_ghost_afd3_edvtrqr7el4jc_name_ghost_OriginGroup.id
    }
    ruleSets: [
      {
        id: profiles_ghost_afd3_edvtrqr7el4jc_name_cache.id
      }
    ]
    supportedProtocols: [
      'Http'
      'Https'
    ]
    patternsToMatch: [
      '/*'
    ]
    forwardingProtocol: 'HttpsOnly'
    linkToDefaultDomain: 'Enabled'
    httpsRedirect: 'Enabled'
    enabledState: 'Enabled'
  }
  dependsOn: [
    profiles_ghost_afd3_edvtrqr7el4jc_name_resource
  ]
}
